version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:3.0.0-node-browsers
        environment:
          RAILS_ENV: test

      - image: circleci/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          MYSQL_ROOT_HOST: '%'

    working_directory: ~/library_map

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
          - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: mv config/database.yml.ci config/database.yml
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: yarn Install
          command: yarn install
      - run: bundle exec bin/webpack

      - run:
          name: Rubocop
          command: bundle exec rubocop

      - run:
          name: RSpec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              $TEST_FILES
          no_output_timeout: 20m

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
          
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 52:fc:72:15:a5:4e:58:e4:ab:9c:13:c7:ba:82:0a:de
      - run: ssh ${USER_NAME}@${HOST_NAME} 'cd /library_map && git pull'
      - run: 
          name: setup secret files
          command: |
            touch ./config/master.key
            chmod 600 ./config/master.key
            echo ${RAILS_MASTER_KEY} >> ./config/master.key
      - run:
          name: docker-compose up
          command: |
            docker-compose build
            docker network create library_map-network
            docker-compose run app rails assets:precompile RAILS_ENV=production
            docker-compose up -d
      - run: sleep 30
      - run:
          name: set up database
          command: |
             docker-compose exec app rails active_storage:install RAILS_ENV=production
             docker-compose exec app rails db:create db:migrate RAILS_ENV=production
             
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
